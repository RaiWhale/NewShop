@model TechnologyShop.Models.Customer
@{
    ViewBag.Title = "Change Password";
}

@using (Html.BeginForm())
{


<div class="form-horizontal">
    <h4>Customer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
     <h5>@Model.CustomerName</h5>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="password" id="Password" name="Password" value="" class="form-control" />
        </div>
    </div>


    <div class="form-group">
        @Html.Label("NewPassword", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input id="NewPassword" name="NewPassword" type="password" pattern="^\S{6,}$" onchange="this.setCustomValidity(this.validity.patternMismatch ? 'Must have at least 6 characters' : ''); if(this.checkValidity()) form.RePassword.pattern = this.value;" placeholder="Password" required>
        </div>
    </div>
  

 

    <div class="form-group">
        @Html.Label("Re-NewPassword", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input id="RePassword" name="RePassword" type="password" pattern="^\S{6,}$" onchange="this.setCustomValidity(this.validity.patternMismatch ? 'Please enter the same Password as above' : '');" placeholder="Verify Password" required>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Change Password" class="btn btn-default" />
            <input type="button" value="Cancel" class="btn btn-danger ml-2" data-dismiss="modal" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @ViewBag.Message
        </div>
    </div>
</div>
}
